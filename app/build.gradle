apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

//apply plugin: 'walle'

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]

    defaultConfig {
        applicationId "cardiac.live.com.livecardiacandroid"
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]

        ndk {
            // 设置支持的SO库架构
            // TODO 以后可能去掉x86，调用模拟器需要
            abiFilters 'armeabi', 'armeabi-v7a', "x86"

            //, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }

        multiDexEnabled true

        javaCompileOptions {

            annotationProcessorOptions {

                arguments = [moduleName: project.getName()]

            }
        }

        packagingOptions {
            exclude 'META-INF/DEPENDENCIES'
            exclude 'META-INF/LICENSE'
            exclude 'META-INF/LICENSE.txt'
            exclude 'META-INF/license.txt'
            exclude 'META-INF/NOTICE'
            exclude 'META-INF/NOTICE.txt'
            exclude 'META-INF/notice.txt'
            exclude 'META-INF/ASL2.0'
            exclude 'META-INF/androidx.localbroadcastmanager_localbroadcastmanager'
        }
    }

    signingConfigs {
        sign {
            storeFile file("test.jks")
            storePassword '000000'
            keyPassword '000000'
            keyAlias 'key0'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.sign
        }

        debug {
            signingConfig signingConfigs.sign
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.1.0-alpha02'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha3'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // Arouter路由框架和注解框架
    implementation rootProject.ext.dependencies["arouter-api"]
    kapt rootProject.ext.dependencies["arouter-compiler"]

    implementation project(':mainmodule')
    implementation project(':baseconfig')

    // dagger2依赖注入
    implementation rootProject.ext.dependencies["dagger2"]
    kapt rootProject.ext.dependencies["daggercompiler"]


}

kapt {

    generateStubs = true

}

// todo 有警告，暂时注销
//walle {
//// 指定渠道包的输出路径
//    apkOutputFolder = new File("${project.buildDir}/outputs/channels")
//// 定制渠道包的APK的文件名称
//    apkFileNameFormat = '${appName}-${channel}-${buildType}-v${versionName}-${buildTime}.apk'
//// 渠道配置文件
//    channelFile = new File("${project.getProjectDir()}/channel")
//}
